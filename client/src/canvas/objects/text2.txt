//Fabric
 // Chargement de la texture de base
        if (baseTexture) {
          await new Promise((resolve) => {
            fabric.Image.fromURL(baseTexture, img => {
              img.scaleToWidth(1024)
              img.scaleToHeight(1024)
              img.set({
                flipY: true, // Simulation du flip vertical
                originX: 'left',
                originY: 'top'
              })
              fabricCanvas.add(img)
              resolve()
            })
          })
        }

//Normal canvas
  // 2. Chargement de la texture de base (si fournie)
    const loadBaseTexture = async () => {
      if (!baseTexture) return Promise.resolve()
      
      return new Promise((resolve) => {
        const img = new Image()
        img.onload = () => {
          // Appliquer le flip vertical uniquement pour la texture de base
          ctx.save()
          ctx.translate(0, canvas.height)
          ctx.scale(1, -1)
          ctx.drawImage(img, 0, 0, canvas.width, canvas.height)
          ctx.restore()
          resolve()
        }
        img.src = baseTexture
      })
    }